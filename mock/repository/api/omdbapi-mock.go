// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ariefrpm/movies/repository/api (interfaces: MovieRepo)

// Package api_mock is a generated GoMock package.
package api_mock

import (
	reflect "reflect"

	entity "github.com/ariefrpm/movies/entity"
	gomock "github.com/golang/mock/gomock"
)

// MockMovieRepo is a mock of MovieRepo interface.
type MockMovieRepo struct {
	ctrl     *gomock.Controller
	recorder *MockMovieRepoMockRecorder
}

// MockMovieRepoMockRecorder is the mock recorder for MockMovieRepo.
type MockMovieRepoMockRecorder struct {
	mock *MockMovieRepo
}

// NewMockMovieRepo creates a new mock instance.
func NewMockMovieRepo(ctrl *gomock.Controller) *MockMovieRepo {
	mock := &MockMovieRepo{ctrl: ctrl}
	mock.recorder = &MockMovieRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMovieRepo) EXPECT() *MockMovieRepoMockRecorder {
	return m.recorder
}

// MovieDetail mocks base method.
func (m *MockMovieRepo) MovieDetail(arg0 string) (*entity.MovieDetail, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MovieDetail", arg0)
	ret0, _ := ret[0].(*entity.MovieDetail)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MovieDetail indicates an expected call of MovieDetail.
func (mr *MockMovieRepoMockRecorder) MovieDetail(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MovieDetail", reflect.TypeOf((*MockMovieRepo)(nil).MovieDetail), arg0)
}

// SearchMovie mocks base method.
func (m *MockMovieRepo) SearchMovie(arg0 int, arg1 string) (*entity.MovieList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchMovie", arg0, arg1)
	ret0, _ := ret[0].(*entity.MovieList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchMovie indicates an expected call of SearchMovie.
func (mr *MockMovieRepoMockRecorder) SearchMovie(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchMovie", reflect.TypeOf((*MockMovieRepo)(nil).SearchMovie), arg0, arg1)
}
