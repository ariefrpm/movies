// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ariefrpm/movies/controller/json (interfaces: MovieDetailController)

// Package controller_mock is a generated GoMock package.
package controller_mock

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMovieDetailController is a mock of MovieDetailController interface.
type MockMovieDetailController struct {
	ctrl     *gomock.Controller
	recorder *MockMovieDetailControllerMockRecorder
}

// MockMovieDetailControllerMockRecorder is the mock recorder for MockMovieDetailController.
type MockMovieDetailControllerMockRecorder struct {
	mock *MockMovieDetailController
}

// NewMockMovieDetailController creates a new mock instance.
func NewMockMovieDetailController(ctrl *gomock.Controller) *MockMovieDetailController {
	mock := &MockMovieDetailController{ctrl: ctrl}
	mock.recorder = &MockMovieDetailControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMovieDetailController) EXPECT() *MockMovieDetailControllerMockRecorder {
	return m.recorder
}

// MovieDetail mocks base method.
func (m *MockMovieDetailController) MovieDetail(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "MovieDetail", arg0, arg1)
}

// MovieDetail indicates an expected call of MovieDetail.
func (mr *MockMovieDetailControllerMockRecorder) MovieDetail(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MovieDetail", reflect.TypeOf((*MockMovieDetailController)(nil).MovieDetail), arg0, arg1)
}
